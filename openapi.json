{
  "openapi": "3.0.3",
  "info": {
    "title": "HeloEmail API",
    "description": "Development documentation",
    "version": "1"
  },
  "servers": [
    {
      "url": "http://[::]:8080"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "ActivityEvents"
    },
    {
      "name": "Statistics",
      "description": "Statistics endpoints"
    },
    {
      "name": "API Credentials"
    },
    {
      "name": "Users"
    },
    {
      "name": "SMTP Users"
    },
    {
      "name": "Channels"
    },
    {
      "name": "Domains"
    },
    {
      "name": "Sending"
    }
  ],
  "paths": {
    "/activity/events": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "channelId",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "required": false
          },
          {
            "name": "after",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false
          },
          {
            "name": "startDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "required": false
          },
          {
            "name": "endDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "schema": {
              "maximum": 500,
              "type": "integer"
            },
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "messageId": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "channelId": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "mailType": {
                            "type": "string",
                            "enum": [
                              "transactional",
                              "broadcast"
                            ]
                          },
                          "mailSource": {
                            "type": "string",
                            "enum": [
                              "smtp",
                              "api"
                            ]
                          },
                          "eventType": {
                            "type": "string",
                            "enum": [
                              "accepted",
                              "processed",
                              "delivered",
                              "bounced",
                              "opened",
                              "clicked",
                              "reported_spam",
                              "subscription_changed"
                            ]
                          },
                          "timestamp": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "subject": {
                            "type": "string"
                          },
                          "recipients": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "after": {
                      "type": "string"
                    },
                    "totalCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "results",
                    "totalCount"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "activityEvents_list",
        "tags": [
          "ActivityEvents"
        ],
        "summary": "List all activity events"
      }
    },
    "/activity/statistics/hourly": {
      "get": {
        "parameters": [
          {
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query",
            "name": "from",
            "required": true
          },
          {
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query",
            "name": "to",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "channelId",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tag",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "timestamp": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "transactional": {
                        "type": "object",
                        "properties": {
                          "accepted": {
                            "type": "integer"
                          },
                          "processed": {
                            "type": "integer"
                          },
                          "delivered": {
                            "type": "integer"
                          },
                          "opened": {
                            "type": "integer"
                          },
                          "clicked": {
                            "type": "integer"
                          },
                          "bounced": {
                            "type": "integer"
                          },
                          "unsubscribed": {
                            "type": "integer"
                          },
                          "complained": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "accepted",
                          "processed",
                          "delivered",
                          "opened",
                          "clicked",
                          "bounced",
                          "unsubscribed",
                          "complained"
                        ]
                      },
                      "broadcast": {
                        "type": "object",
                        "properties": {
                          "accepted": {
                            "type": "integer"
                          },
                          "processed": {
                            "type": "integer"
                          },
                          "delivered": {
                            "type": "integer"
                          },
                          "opened": {
                            "type": "integer"
                          },
                          "clicked": {
                            "type": "integer"
                          },
                          "bounced": {
                            "type": "integer"
                          },
                          "unsubscribed": {
                            "type": "integer"
                          },
                          "complained": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "accepted",
                          "processed",
                          "delivered",
                          "opened",
                          "clicked",
                          "bounced",
                          "unsubscribed",
                          "complained"
                        ]
                      }
                    },
                    "required": [
                      "timestamp",
                      "transactional",
                      "broadcast"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "operationId": "statistics_retrieveHourly",
        "tags": [
          "Statistics"
        ]
      }
    },
    "/activity/statistics/daily": {
      "get": {
        "parameters": [
          {
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query",
            "name": "from",
            "required": true
          },
          {
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query",
            "name": "to",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "timezone",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "channelId",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tag",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "timestamp": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "transactional": {
                        "type": "object",
                        "properties": {
                          "accepted": {
                            "type": "integer"
                          },
                          "processed": {
                            "type": "integer"
                          },
                          "delivered": {
                            "type": "integer"
                          },
                          "opened": {
                            "type": "integer"
                          },
                          "clicked": {
                            "type": "integer"
                          },
                          "bounced": {
                            "type": "integer"
                          },
                          "unsubscribed": {
                            "type": "integer"
                          },
                          "complained": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "accepted",
                          "processed",
                          "delivered",
                          "opened",
                          "clicked",
                          "bounced",
                          "unsubscribed",
                          "complained"
                        ]
                      },
                      "broadcast": {
                        "type": "object",
                        "properties": {
                          "accepted": {
                            "type": "integer"
                          },
                          "processed": {
                            "type": "integer"
                          },
                          "delivered": {
                            "type": "integer"
                          },
                          "opened": {
                            "type": "integer"
                          },
                          "clicked": {
                            "type": "integer"
                          },
                          "bounced": {
                            "type": "integer"
                          },
                          "unsubscribed": {
                            "type": "integer"
                          },
                          "complained": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "accepted",
                          "processed",
                          "delivered",
                          "opened",
                          "clicked",
                          "bounced",
                          "unsubscribed",
                          "complained"
                        ]
                      }
                    },
                    "required": [
                      "timestamp",
                      "transactional",
                      "broadcast"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "operationId": "statistics_retrieveDaily",
        "tags": [
          "Statistics"
        ]
      }
    },
    "/activity/statistics/totals": {
      "get": {
        "parameters": [
          {
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query",
            "name": "from",
            "required": true
          },
          {
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query",
            "name": "to",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "channelId",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tag",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactional": {
                      "type": "object",
                      "properties": {
                        "accepted": {
                          "type": "integer"
                        },
                        "processed": {
                          "type": "integer"
                        },
                        "delivered": {
                          "type": "integer"
                        },
                        "opened": {
                          "type": "integer"
                        },
                        "clicked": {
                          "type": "integer"
                        },
                        "bounced": {
                          "type": "integer"
                        },
                        "unsubscribed": {
                          "type": "integer"
                        },
                        "complained": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "accepted",
                        "processed",
                        "delivered",
                        "opened",
                        "clicked",
                        "bounced",
                        "unsubscribed",
                        "complained"
                      ]
                    },
                    "broadcast": {
                      "type": "object",
                      "properties": {
                        "accepted": {
                          "type": "integer"
                        },
                        "processed": {
                          "type": "integer"
                        },
                        "delivered": {
                          "type": "integer"
                        },
                        "opened": {
                          "type": "integer"
                        },
                        "clicked": {
                          "type": "integer"
                        },
                        "bounced": {
                          "type": "integer"
                        },
                        "unsubscribed": {
                          "type": "integer"
                        },
                        "complained": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "accepted",
                        "processed",
                        "delivered",
                        "opened",
                        "clicked",
                        "bounced",
                        "unsubscribed",
                        "complained"
                      ]
                    }
                  },
                  "required": [
                    "transactional",
                    "broadcast"
                  ]
                }
              }
            }
          }
        },
        "operationId": "statistics_retrieveTotals",
        "tags": [
          "Statistics"
        ]
      }
    },
    "/api-credentials": {
      "post": {
        "tags": [
          "API Credentials"
        ],
        "operationId": "apiCredential_create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateApiCredentialRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCredentialResponseWithKey"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Create an API credential"
      },
      "get": {
        "tags": [
          "API Credentials"
        ],
        "operationId": "apiCredential_list",
        "parameters": [
          {
            "name": "channelId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResultOfApiCredentialResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "List all API credentials"
      }
    },
    "/api-credentials/{id}": {
      "patch": {
        "tags": [
          "API Credentials"
        ],
        "operationId": "apiCredential_update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApiCredentialRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCredentialResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Update an API credential"
      },
      "get": {
        "tags": [
          "API Credentials"
        ],
        "operationId": "apiCredential_retrieve",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCredentialResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Retrieve an API credential"
      },
      "delete": {
        "tags": [
          "API Credentials"
        ],
        "operationId": "apiCredential_delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Delete an API credential"
      }
    },
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "user_create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Create a user"
      },
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "user_list",
        "parameters": [
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Role",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResultOfUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "List all users"
      }
    },
    "/users/{id}": {
      "patch": {
        "tags": [
          "Users"
        ],
        "operationId": "user_update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Update a user"
      },
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "user_retrieve",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Retrieve a user"
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "operationId": "user_delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Delete a user"
      }
    },
    "/channels/{channelId}/smtp-users": {
      "post": {
        "tags": [
          "SMTP Users"
        ],
        "operationId": "smtpUser_create",
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSmtpUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmtpUserWithPasswordResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Create an SMTP user"
      },
      "get": {
        "tags": [
          "SMTP Users"
        ],
        "operationId": "smtpUser_list",
        "parameters": [
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResultOfSmtpUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "List all SMTP users"
      }
    },
    "/channels/{channelId}/smtp-users/{id}": {
      "patch": {
        "tags": [
          "SMTP Users"
        ],
        "operationId": "smtpUser_update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SmtpUserUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmtpUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Update an SMTP user"
      },
      "get": {
        "tags": [
          "SMTP Users"
        ],
        "operationId": "smtpUser_retrieve",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmtpUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Retrieve an SMTP user"
      },
      "delete": {
        "tags": [
          "SMTP Users"
        ],
        "operationId": "smtpUser_delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Delete an SMTP user"
      }
    },
    "/channels": {
      "post": {
        "tags": [
          "Channels"
        ],
        "description": "Create a new Channel.",
        "operationId": "channel_create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChannelRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          }
        },
        "summary": "Create a channel"
      },
      "get": {
        "tags": [
          "Channels"
        ],
        "description": "Fetch a list of Channels.",
        "operationId": "channel_list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "channelIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "explode": false
          },
          {
            "name": "deliveryType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/NullableOfDeliveryType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResultOfChannelResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          }
        },
        "summary": "List all channels"
      }
    },
    "/channels/{id}": {
      "patch": {
        "tags": [
          "Channels"
        ],
        "description": "Update an existing Channel.",
        "operationId": "channel_update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateChannelRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          }
        },
        "summary": "Update a channel"
      },
      "get": {
        "tags": [
          "Channels"
        ],
        "description": "Retrieve a single Channel.",
        "operationId": "channel_retrieve",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          }
        },
        "summary": "Retrieve a channel"
      },
      "delete": {
        "tags": [
          "Channels"
        ],
        "description": "Delete a Channel.",
        "operationId": "channel_delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse1"
                }
              }
            }
          }
        },
        "summary": "Delete a channel"
      }
    },
    "/domains": {
      "post": {
        "tags": [
          "Domains"
        ],
        "description": "Create a new Domain.",
        "operationId": "domain_create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDomainRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainWithDnsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse2"
                }
              }
            }
          }
        },
        "summary": "Create a domain"
      },
      "get": {
        "tags": [
          "Domains"
        ],
        "description": "Fetch a list of Domains.",
        "operationId": "domain_list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "channelIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponseOfDomainResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse2"
                }
              }
            }
          }
        },
        "summary": "List all domains"
      }
    },
    "/domains/{id}": {
      "patch": {
        "tags": [
          "Domains"
        ],
        "description": "Update an existing Domain.",
        "operationId": "domain_update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDomainRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse2"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse2"
                }
              }
            }
          }
        },
        "summary": "Update a domain"
      },
      "get": {
        "tags": [
          "Domains"
        ],
        "description": "Retrieve an existing Domain.",
        "operationId": "domain_retrieve",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainWithDnsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse2"
                }
              }
            }
          }
        },
        "summary": "Retrieve a domain"
      },
      "delete": {
        "tags": [
          "Domains"
        ],
        "description": "Delete an existing Domain.",
        "operationId": "domain_delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse2"
                }
              }
            }
          }
        },
        "summary": "Delete a domain"
      }
    },
    "/domains/{id}/verify": {
      "post": {
        "tags": [
          "Domains"
        ],
        "description": "Verify an existing Domain.",
        "operationId": "domain_verify",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DnsRecordsResponse2"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse2"
                }
              }
            }
          }
        },
        "summary": "Verify a domain"
      }
    },
    "/domains/{id}/rotate-key": {
      "post": {
        "tags": [
          "Domains"
        ],
        "description": "Rotate an existing Domain's DKIM key.",
        "operationId": "domain_rotateKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DnsRecordResponse2"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse2"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse2"
                }
              }
            }
          }
        },
        "summary": "Rotate a domain key"
      }
    },
    "/send/transactional": {
      "post": {
        "tags": [
          "Sending"
        ],
        "operationId": "send_transactional",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendResponse"
                }
              }
            }
          }
        }
      }
    },
    "/send/transactional/batch": {
      "post": {
        "tags": [
          "Sending"
        ],
        "operationId": "send_transactional_batch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SendResponse"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SendResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/send/broadcast": {
      "post": {
        "tags": [
          "Sending"
        ],
        "operationId": "send_broadcast",
        "responses": {
          "200": {
            "description": "OK"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiCredentialResponse": {
        "required": [
          "id",
          "permissions",
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "channelId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiCredentialResponseWithKey": {
        "required": [
          "id",
          "permissions",
          "secret",
          "apiKey",
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "channelId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "secret": {
            "type": "string"
          },
          "apiKey": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateSmtpUserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "mailType": {
            "$ref": "#/components/schemas/NullableOfMailType"
          }
        }
      },
      "CreateUserRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "nullable": true
          },
          "correlationId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GenerateApiCredentialRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "channelId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "MailType": {
        "enum": [
          "Unknown",
          "Transactional",
          "Broadcast"
        ]
      },
      "NullableOfMailType": {
        "enum": [
          "Unknown",
          "Transactional",
          "Broadcast",
          null
        ],
        "nullable": true
      },
      "OptionalOfNullableOfGuid": {
        "type": "string",
        "nullable": true
      },
      "OptionalOfstring": {
        "type": "string",
        "nullable": true
      },
      "PaginationResultOfApiCredentialResponse": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiCredentialResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PaginationResultOfSmtpUserResponse": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SmtpUserResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PaginationResultOfUserResponse": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SmtpUserResponse": {
        "required": [
          "id",
          "accountId",
          "channelId",
          "mailType",
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "channelId": {
            "type": "string",
            "format": "uuid"
          },
          "mailType": {
            "$ref": "#/components/schemas/MailType"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SmtpUserUpdateRequest": {
        "type": "object",
        "properties": {
          "mailType": {
            "$ref": "#/components/schemas/NullableOfMailType"
          },
          "name": {
            "$ref": "#/components/schemas/OptionalOfstring"
          }
        }
      },
      "SmtpUserWithPasswordResponse": {
        "required": [
          "password",
          "id",
          "accountId",
          "channelId",
          "mailType",
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "channelId": {
            "type": "string",
            "format": "uuid"
          },
          "mailType": {
            "$ref": "#/components/schemas/MailType"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UpdateApiCredentialRequest": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/OptionalOfstring"
          },
          "channelId": {
            "$ref": "#/components/schemas/OptionalOfNullableOfGuid"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserResponse": {
        "required": [
          "id",
          "email",
          "permissions",
          "roleName",
          "name",
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roleName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ChannelResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "deliveryType": {
            "$ref": "#/components/schemas/DeliveryType"
          },
          "trackLinks": {
            "type": "boolean"
          },
          "trackOpens": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateChannelRequest": {
        "required": [
          "name",
          "deliveryType"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "deliveryType": {
            "$ref": "#/components/schemas/DeliveryType"
          },
          "trackLinks": {
            "type": "boolean"
          },
          "trackOpens": {
            "type": "boolean"
          }
        }
      },
      "DeliveryType": {
        "enum": [
          "live",
          "blackhole",
          "routed"
        ]
      },
      "ErrorResponse1": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "requestId": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        }
      },
      "NullableOfDeliveryType": {
        "enum": [
          "live",
          "blackhole",
          "routed",
          null
        ]
      },
      "PaginationResultOfChannelResponse": {
        "required": [
          "results",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChannelResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateChannelRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "deliveryType": {
            "$ref": "#/components/schemas/DeliveryType"
          },
          "trackLinks": {
            "type": "boolean"
          },
          "trackOpens": {
            "type": "boolean"
          }
        }
      },
      "CreateDomainRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "channels": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "DnsRecordResponse": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DnsRecordType"
          },
          "host": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/DnsRecordStatus"
          }
        },
        "nullable": true
      },
      "DnsRecordResponse2": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DnsRecordType"
          },
          "host": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/DnsRecordStatus"
          }
        }
      },
      "DnsRecordsResponse": {
        "type": "object",
        "properties": {
          "domainKeyActive": {
            "$ref": "#/components/schemas/DnsRecordResponse"
          },
          "domainKeyPending": {
            "$ref": "#/components/schemas/DnsRecordResponse"
          },
          "returnPath": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DnsRecordResponse2"
            },
            "nullable": true
          },
          "tracking": {
            "$ref": "#/components/schemas/DnsRecordResponse"
          },
          "unsubscribe": {
            "$ref": "#/components/schemas/DnsRecordResponse"
          }
        },
        "nullable": true
      },
      "DnsRecordsResponse2": {
        "type": "object",
        "properties": {
          "domainKeyActive": {
            "$ref": "#/components/schemas/DnsRecordResponse"
          },
          "domainKeyPending": {
            "$ref": "#/components/schemas/DnsRecordResponse"
          },
          "returnPath": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DnsRecordResponse2"
            },
            "nullable": true
          },
          "tracking": {
            "$ref": "#/components/schemas/DnsRecordResponse"
          },
          "unsubscribe": {
            "$ref": "#/components/schemas/DnsRecordResponse"
          }
        }
      },
      "DnsRecordStatus": {
        "enum": [
          "pending",
          "verified",
          "failing",
          "failed"
        ]
      },
      "DnsRecordType": {
        "enum": [
          "txt",
          "cname"
        ]
      },
      "DomainResponse": {
        "required": [
          "channels"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "verified": {
            "type": "boolean"
          },
          "channels": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        }
      },
      "DomainWithDnsResponse": {
        "required": [
          "channels"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "verified": {
            "type": "boolean"
          },
          "channels": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "dnsRecords": {
            "$ref": "#/components/schemas/DnsRecordsResponse"
          }
        }
      },
      "ErrorResponse2": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "requestId": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        }
      },
      "PaginatedResponseOfDomainResponse": {
        "required": [
          "totalCount",
          "results"
        ],
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DomainResponse"
            }
          }
        }
      },
      "UpdateDomainRequest": {
        "type": "object",
        "properties": {
          "channels": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "SendRequest": {},
      "SendResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true
          },
          "messageId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "suppressions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}